{"ast":null,"code":"var _jsxFileName = \"/Users/ayzo/Downloads/generativeed1188/frontend/src/components/Discussion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate hook from react-router-dom\nimport Message from '../components/Message';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Discussion = () => {\n  _s();\n  const {\n    promptId\n  } = useParams();\n  const [prompt, setPrompt] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loadmessages, setLoadMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const navigate = useNavigate(); // Initialize the useNavigate hook\n  const [document, setDocument] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleInput = e => {\n    const textarea = e.target;\n    textarea.style.height = 'auto'; // Reset the height to shrink if needed\n    textarea.style.height = `${textarea.scrollHeight}px`; // Set height to scroll height to expand\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    fetch('http://localhost:3001/retrieve') // Adjust the URL as needed\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      return response.json();\n    }).then(data => {\n      setDocument(data);\n      setIsLoading(false);\n    }).catch(err => {\n      setError(err.message);\n      setIsLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (!promptId) return; // Ensure there is a promptId available\n      try {\n        const response = await fetch(`http://localhost:3001/get-messages/${promptId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch messages');\n        }\n        const data = await response.json();\n        setLoadMessages(data); // Set fetched messages to state\n      } catch (error) {\n        console.error('There was an error fetching the messages:', error);\n      }\n      // try {\n      //     const response = await fetch(`http://localhost:3001/get-discussions/${promptId}`);\n      //     if (!response.ok) {\n      //         throw new Error('Failed to fetch messages');\n      //     }\n      //     const data = await response.json();\n      //     console.log(data)\n      // } catch (error) {\n      //     console.error('There was an error fetching the messages:', error);\n      // }\n    };\n    const fetchPrompt = async () => {\n      if (!promptId) return; // Ensure there is a promptId available\n      try {\n        const response = await fetch(`http://localhost:3001/get-discussions/${promptId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch messages');\n        }\n        const data = await response.json();\n        setPrompt(data[0].prompt);\n        // setLoadMessages(data);  // Set fetched messages to state\n      } catch (error) {\n        console.error('There was an error fetching the messages:', error);\n      }\n    };\n    fetchMessages();\n    fetchPrompt();\n  }, [loadmessages, promptId]);\n  // Empty dependency array to run only on component mount\n  const handleSendMessage = () => {\n    if (!promptId) return; // Ensure there is a promptId available\n\n    if (newMessage.trim()) {\n      const messageData = {\n        prompt: prompt,\n        promptId: promptId,\n        content: newMessage\n      };\n      fetch('http://localhost:3001/post-message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(messageData)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to post message');\n        }\n        return response.json();\n      }).then(data => {\n        setLoadMessages(prevMessages => [...prevMessages, data]); // Add new message to the list\n        setNewMessage(\"\"); // Clear input after successful send\n      }).catch(err => {\n        console.error('There was an error posting the message:', err);\n        setNewMessage(\"\"); // Clear input after successful send\n      });\n    }\n  };\n  const handleBack = () => {\n    navigate(-1); // Navigate back to the previous page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '100px',\n      backgroundColor: 'rgb(213, 223, 255)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      style: styles.backButton,\n      children: \"BACK TO FORUM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: loadmessages ? prompt : \"Loading discussion topic...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.messagesContainer,\n      children: loadmessages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        message: msg\n      }, msg.id || index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this) // Use the Message component\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => {\n          setNewMessage(e.target.value);\n          handleInput(e);\n        },\n        placeholder: \"Type your message here...\",\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        style: styles.button,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(Discussion, \"7tD+Qn8jKCANCfh2KrE/wAKY054=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Discussion;\nconst styles = {\n  backButton: {\n    padding: '10px 20px',\n    fontSize: '14px',\n    color: 'white',\n    backgroundColor: '#BC0A34',\n    borderRadius: '5px'\n  },\n  messagesContainer: {\n    height: '55vh',\n    // Fixed height set to 75% of the viewport height\n    overflowY: 'auto',\n    // Makes the container scrollable\n    border: '1px solid #ccc',\n    borderRadius: \"10px\",\n    padding: '10px',\n    marginBottom: '10px',\n    backgroundColor: 'white'\n  },\n  message: {\n    backgroundColor: '#f4f4f8',\n    padding: '8px',\n    borderRadius: '5px',\n    margin: '5px 0',\n    color: 'black'\n  },\n  inputContainer: {\n    padding: '10px 0',\n    display: 'flex',\n    justifyContent: 'space-between',\n    height: '10vh'\n  },\n  input: {\n    width: '93%',\n    // Ensures textarea takes the full container width\n    minHeight: '50px',\n    // Minimum height of the textarea\n    overflowY: 'hidden',\n    // Prevents scrollbar from appearing inside the textarea\n    padding: '10px 5px',\n    boxSizing: 'border-box',\n    // Include padding and border in the element's width and height\n    resize: 'none',\n    // Disables manual resizing\n    transition: \"height 0.2s\"\n  },\n  button: {\n    padding: '20px',\n    marginLeft: '10px',\n    fontSize: '20px',\n    color: 'white',\n    backgroundColor: '#BC0A34',\n    borderRadius: '10px'\n  }\n};\nexport default Discussion;\nvar _c;\n$RefreshReg$(_c, \"Discussion\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Message","useParams","jsxDEV","_jsxDEV","Discussion","_s","promptId","prompt","setPrompt","messages","setMessages","loadmessages","setLoadMessages","newMessage","setNewMessage","navigate","document","setDocument","isLoading","setIsLoading","error","setError","handleInput","e","textarea","target","style","height","scrollHeight","fetch","then","response","ok","Error","json","data","catch","err","message","fetchMessages","console","fetchPrompt","handleSendMessage","trim","messageData","content","method","headers","body","JSON","stringify","prevMessages","handleBack","padding","backgroundColor","children","onClick","styles","backButton","fileName","_jsxFileName","lineNumber","columnNumber","messagesContainer","map","msg","index","id","inputContainer","type","value","onChange","placeholder","input","button","_c","fontSize","color","borderRadius","overflowY","border","marginBottom","margin","display","justifyContent","width","minHeight","boxSizing","resize","transition","marginLeft","$RefreshReg$"],"sources":["/Users/ayzo/Downloads/generativeed1188/frontend/src/components/Discussion.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';  // Import useNavigate hook from react-router-dom\nimport Message from '../components/Message';\nimport { useParams } from 'react-router-dom';\n\nconst Discussion = () => {\n  const { promptId } = useParams();\n  const [prompt, setPrompt] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loadmessages, setLoadMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const navigate = useNavigate();  // Initialize the useNavigate hook\n  const [document, setDocument] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleInput = (e) => {\n    const textarea = e.target;\n    textarea.style.height = 'auto';  // Reset the height to shrink if needed\n    textarea.style.height = `${textarea.scrollHeight}px`;  // Set height to scroll height to expand\n  };\n  \n  useEffect(() => {\n    setIsLoading(true);\n    fetch('http://localhost:3001/retrieve')  // Adjust the URL as needed\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setDocument(data);\n        setIsLoading(false);\n      })\n      .catch(err => {\n        setError(err.message);\n        setIsLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n        if (!promptId) return;  // Ensure there is a promptId available\n        try {\n            const response = await fetch(`http://localhost:3001/get-messages/${promptId}`);\n            if (!response.ok) {\n                throw new Error('Failed to fetch messages');\n            }\n            const data = await response.json();\n            setLoadMessages(data);  // Set fetched messages to state\n        } catch (error) {\n            console.error('There was an error fetching the messages:', error);\n        }\n        // try {\n        //     const response = await fetch(`http://localhost:3001/get-discussions/${promptId}`);\n        //     if (!response.ok) {\n        //         throw new Error('Failed to fetch messages');\n        //     }\n        //     const data = await response.json();\n        //     console.log(data)\n        // } catch (error) {\n        //     console.error('There was an error fetching the messages:', error);\n        // }\n    };\n    const fetchPrompt = async () => {\n        if (!promptId) return;  // Ensure there is a promptId available\n        try {\n            const response = await fetch(`http://localhost:3001/get-discussions/${promptId}`);\n            if (!response.ok) {\n                throw new Error('Failed to fetch messages');\n            }\n            const data = await response.json();\n            setPrompt(data[0].prompt)\n            // setLoadMessages(data);  // Set fetched messages to state\n        } catch (error) {\n            console.error('There was an error fetching the messages:', error);\n        }\n    };\n    fetchMessages();\n    fetchPrompt();\n    }, [loadmessages, promptId]);\n  // Empty dependency array to run only on component mount\n    const handleSendMessage = () => {\n        if (!promptId) return;  // Ensure there is a promptId available\n        \n        if (newMessage.trim()) {\n            const messageData = {\n                prompt: prompt,\n                promptId: promptId,\n                content: newMessage,\n            };\n    \n            fetch('http://localhost:3001/post-message', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(messageData)\n            })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to post message');\n                }\n                return response.json();\n            })\n            .then(data => {\n                setLoadMessages(prevMessages => [...prevMessages, data]); // Add new message to the list\n                setNewMessage(\"\"); // Clear input after successful send\n            })\n            .catch(err => {\n                console.error('There was an error posting the message:', err);\n                setNewMessage(\"\"); // Clear input after successful send\n            });\n        }\n    };\n\n  const handleBack = () => {\n    navigate(-1);  // Navigate back to the previous page\n  };\n  return (\n    <div style={{ padding: '100px', backgroundColor: 'rgb(213, 223, 255)' }}>\n      <button onClick={handleBack} style={styles.backButton}>BACK TO FORUM</button>\n      <h2>{loadmessages ? prompt : \"Loading discussion topic...\"}</h2>      \n      <div style={styles.messagesContainer}>\n        {loadmessages.map((msg, index) => (\n            <Message key={msg.id || index} message={msg} />  // Use the Message component\n        ))}\n      </div>\n      <div style={styles.inputContainer}>\n        <textarea\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => {setNewMessage(e.target.value); handleInput(e)}}\n          placeholder=\"Type your message here...\"\n          style={styles.input}\n        />\n        <button onClick={handleSendMessage} style={styles.button}>SEND</button>\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n    backButton: {\n        padding: '10px 20px',\n        fontSize: '14px',\n        color: 'white',\n        backgroundColor: '#BC0A34',\n        borderRadius: '5px'\n    },\n    messagesContainer: {\n      height: '55vh',  // Fixed height set to 75% of the viewport height\n      overflowY: 'auto',  // Makes the container scrollable\n      border: '1px solid #ccc',\n      borderRadius: \"10px\",\n      padding: '10px',\n      marginBottom: '10px',\n      backgroundColor: 'white',\n    },\n    message: {\n      backgroundColor: '#f4f4f8',\n      padding: '8px',\n      borderRadius: '5px',\n      margin: '5px 0',\n      color: 'black'\n    },\n    inputContainer: {\n        padding: '10px 0',\n        display: 'flex',\n        justifyContent: 'space-between',\n        height: '10vh',\n    },\n    input: {\n        width: '93%',  // Ensures textarea takes the full container width\n        minHeight: '50px',  // Minimum height of the textarea\n        overflowY: 'hidden',  // Prevents scrollbar from appearing inside the textarea\n        padding: '10px 5px',\n        boxSizing: 'border-box',  // Include padding and border in the element's width and height\n        resize: 'none',  // Disables manual resizing\n        transition: \"height 0.2s\"\n    },\n    button: {\n        padding: '20px',\n        marginLeft: '10px',\n        fontSize: '20px',\n        color: 'white',\n        backgroundColor: '#BC0A34',\n        borderRadius: '10px'\n    }\n  };\n\nexport default Discussion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}